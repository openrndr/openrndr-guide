---
# File generated by dokgen. Do not edit. 
# Edit 'src/main/kotlin/docs/30_Drawing/C165_Video.kt' instead.
layout: default
title: Video
parent: Drawing
last_modified_at: 2025.10.16 16:50:06 +0000
nav_order: 165
has_children: false
---
 
# Playing videos

OPENRNDR comes with FFMPEG-backed video support. 

## A simple video player

##### Relevant APIs

* [VideoPlayerFFMPEG.fromFile](https://github.com/openrndr/openrndr/blob/v0.4.0-rc.7/openrndr-jvm/openrndr-ffmpeg/src/main/kotlin/org/openrndr/ffmpeg/VideoPlayerFFMPEG.kt#L350)
* [VideoPlayerFFMPEG.play](https://github.com/openrndr/openrndr/blob/v0.4.0-rc.7/openrndr-jvm/openrndr-ffmpeg/src/main/kotlin/org/openrndr/ffmpeg/VideoPlayerFFMPEG.kt#L488)
* [VideoPlayerFFMPEG.draw](https://github.com/openrndr/openrndr/blob/v0.4.0-rc.7/openrndr-jvm/openrndr-ffmpeg/src/main/kotlin/org/openrndr/ffmpeg/VideoPlayerFFMPEG.kt#L735)
 
 
```kotlin
fun main() = application {
    program {
        val videoPlayer = VideoPlayerFFMPEG.fromFile("data/video.mp4")
        videoPlayer.play()
        extend {
            drawer.clear(ColorRGBa.BLACK)
            videoPlayer.draw(drawer)
        }
    }
}
``` 
 
## Looping a video
 
 
```kotlin
// Loop: restart when reaching the end
videoPlayer.ended.listen {
    videoPlayer.restart()
}

extend {
    videoPlayer.draw(drawer)
}
``` 
 
## Video from camera devices

The `VideoPlayerFFMPEG` class can be used to get and display video data 
from camera devices. To open a camera device you use the `fromDevice()` 
method. When this method is called without any arguments it attempts to 
open the default camera device.

`VideoPlayerFFMPEG` has minimal device listing capabilities. The device 
names of available input devices can be listed using 
[VideoPlayerFFMPEG.listDeviceNames](https://github.com/openrndr/openrndr/blob/v0.4.0-rc.7/openrndr-jvm/openrndr-ffmpeg/src/main/kotlin/org/openrndr/ffmpeg/VideoPlayerFFMPEG.kt#L241).

##### Relevant APIs

* [VideoPlayerFFMPEG.fromDevice](https://github.com/openrndr/openrndr/blob/v0.4.0-rc.7/openrndr-jvm/openrndr-ffmpeg/src/main/kotlin/org/openrndr/ffmpeg/VideoPlayerFFMPEG.kt#L369)
* [VideoPlayerFFMPEG.defaultDevice](https://github.com/openrndr/openrndr/blob/v0.4.0-rc.7/openrndr-jvm/openrndr-ffmpeg/src/main/kotlin/org/openrndr/ffmpeg/VideoPlayerFFMPEG.kt#L390)

##### Examples 
 
```kotlin
fun main() = application {
    program {
        val videoPlayer = VideoPlayerFFMPEG.fromDevice()
        videoPlayer.play()
        extend {
            drawer.clear(ColorRGBa.BLACK)
            videoPlayer.draw(drawer)
        }
    }
}
``` 
 
## Processing video

Video playback can be combined with render targets and filters.

In the following example the video player output is blurred before 
presenting it on the screen. 
 
```kotlin
fun main() = application {
    program {
        val videoPlayer = VideoPlayerFFMPEG.fromFile("data/video.mp4")
        val blur = BoxBlur()
        val renderTarget = renderTarget(width, height) {
            colorBuffer()
        }
        videoPlayer.play()
        
        extend {
            drawer.clear(ColorRGBa.BLACK)
            // -- draw the video on the render target
            drawer.withTarget(renderTarget) {
                videoPlayer.draw(drawer)
            }
            // -- apply a blur on the render target's color attachment
            blur.apply(renderTarget.colorBuffer(0), renderTarget.colorBuffer(0))
            // -- draw the blurred color attachment
            drawer.image(renderTarget.colorBuffer(0))
        }
    }
}
``` 

[edit on GitHub](https://github.com/openrndr/openrndr-guide/blob/main/src/main/kotlin/docs/30_Drawing/C165_Video.kt){: .btn .btn-github }